//
// Copyright (C) 2014 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

common_cflags = [
    "-D_REENTRANT",
    "-O3",
    "-funroll-loops",
    "-fvisibility=hidden",
    "-Werror",
    "-Wno-unused-parameter",
    "-Wno-type-limits",
]

// These parameters change the way jemalloc works.
//   ANDROID_MAX_ARENAS=XX
//     The total number of arenas will be less than or equal to this number.
//     The number of arenas will be calculated as 2 * the number of cpus
//     but no larger than XX.
//   ANDROID_TCACHE_NSLOTS_SMALL_MAX=XX
//     The number of small slots held in the tcache. The higher this number
//     is, the higher amount of PSS consumed. If this number is set too low
//     then small allocations will take longer to complete.
//   ANDROID_TCACHE_NSLOTS_LARGE=XX
//     The number of large slots held in the tcache. The higher this number
//     is, the higher amount of PSS consumed. If this number is set too low
//     then large allocations will take longer to complete.
//   ANDROID_LG_TCACHE_MAXCLASS_DEFAULT=XX
//     1 << XX is the maximum sized allocation that will be in the tcache.
//   ANDROID_LG_CHUNK_DEFAULT=XX
//     1 << XX is the default chunk size used by the system. Decreasing this
//     usually decreases the amount of PSS used, but can increase
//     fragmentation.

// Default to a single arena for svelte configurations to minimize
// PSS consumed by jemalloc.
common_cflags += [
    "-DANDROID_MAX_ARENAS=1",
    "-DANDROID_LG_TCACHE_MAXCLASS_DEFAULT=16",
]

common_c_local_includes = [
    "src",
    "include",
]

common_product_variables = {
    // Only enable the tcache on non-svelte configurations, to save PSS.
    malloc_not_svelte: {
        cflags: [
            "-UANDROID_MAX_ARENAS",
            "-DANDROID_MAX_ARENAS=2",
            "-DJEMALLOC_TCACHE",
            "-DANDROID_TCACHE_NSLOTS_SMALL_MAX=8",
            "-DANDROID_TCACHE_NSLOTS_LARGE=16",
        ],
    },
}

cc_defaults {
    name: "jemalloc_defaults",
    defaults: ["linux_bionic_supported"],
    cflags: common_cflags,

    product_variables: common_product_variables,

    multilib: {
        lib32: {
            // Use a 512K chunk size on 32 bit systems.
            // This keeps the total amount of virtual address space consumed
            // by jemalloc lower.
            cflags: [
                "-DANDROID_LG_CHUNK_DEFAULT=19",
            ],
        },
        lib64: {
            // Use a 2MB chunk size on 64 bit systems.
            // This is the default currently used by 4.0.0
            cflags: [
                "-DANDROID_LG_CHUNK_DEFAULT=21",
            ],
        },
    },

    local_include_dirs: common_c_local_includes,
    stl: "none",
}

lib_src_files = [
    "src/arena.c",
    "src/atomic.c",
    "src/base.c",
    "src/bitmap.c",
    "src/chunk.c",
    "src/chunk_dss.c",
    "src/chunk_mmap.c",
    "src/ckh.c",
    "src/ctl.c",
    "src/extent.c",
    "src/hash.c",
    "src/huge.c",
    "src/jemalloc.c",
    "src/mb.c",
    "src/mutex.c",
    "src/nstime.c",
    "src/pages.c",
    "src/prng.c",
    "src/prof.c",
    "src/quarantine.c",
    "src/rtree.c",
    "src/spin.c",
    "src/stats.c",
    "src/tcache.c",
    "src/ticker.c",
    "src/tsd.c",
    "src/util.c",
    "src/witness.c",
]

//-----------------------------------------------------------------------
// jemalloc static library
//-----------------------------------------------------------------------
cc_library_static {
    name: "libjemalloc",

    defaults: ["jemalloc_defaults"],

    cflags: ["-include bionic/libc/async_safe/include/async_safe/log.h"],

    srcs: lib_src_files,
}

//-----------------------------------------------------------------------
// jemalloc static jet library
//-----------------------------------------------------------------------
cc_library_static {
    name: "libjemalloc_jet",

    defaults: ["jemalloc_defaults"],

    cflags: [
        "-DJEMALLOC_JET",
        "-include android/include/log.h",
    ],

    srcs: lib_src_files,

}
